plugins {
    id 'java-library-distribution'
    id 'io.freefair.lombok'
    id 'me.julb.gradleplugins.additionaljars'
    id 'me.julb.gradleplugins.java17'
    id 'org.springframework.boot'
    id 'com.github.johnrengelman.processes'
    id 'org.springdoc.openapi-gradle-plugin'
}

dependencies {
    api platform(project(':bom'))
    annotationProcessor platform(project(':bom'))

    implementation project(':libraries:library-dto-simple')
    implementation project(':libraries:library-dto-security')
    implementation project(':libraries:library-utility-date')
    implementation project(':libraries:library-utility-identifier')
    implementation project(':libraries:library-utility-jose-jwt')
    implementation project(':libraries:library-utility-otp')
    implementation project(':libraries:library-utility-random')
    implementation project(':spring-boot-starters:spring-boot-starter-messaging')
    implementation project(':spring-boot-starters:spring-boot-starter-web')
    implementation project(':spring-boot-starters:spring-boot-starter-persistence-mongodb')
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.googlecode.libphonenumber:libphonenumber'

    compileOnly 'org.mapstruct:mapstruct'   
	annotationProcessor 'org.projectlombok:lombok', 'org.projectlombok:lombok-mapstruct-binding', 'org.mapstruct:mapstruct-processor'
    
    testImplementation project(':spring-boot-starters:spring-boot-starter-test')
    testImplementation project(':spring-boot-starters:spring-boot-starter-persistence-mongodb-test')
    testImplementation project(':spring-boot-starters:spring-boot-starter-messaging-test')
    testImplementation 'org.hamcrest:hamcrest'
}



jar {
    manifest {
        attributes(
            'Main-Class': 'me.julb.Application'
        )
    }
}

test {
    useJUnitPlatform()
    jvmArgs = ["-Dlogging.level.root=WARN", "-Dlogging.level.org.springframework=WARN"]
}

springBoot {
    buildInfo()
}

openApi {
    forkProperties = "-Dspring.profiles.active=NO_OUTPUT,OAS3"
}

bootBuildImage {
    environment = ["BP_JVM_VERSION" : "17.*"]
    imageName = "${System.getProperty('docker.namespace')}/${project.name}:${project.version}"
}

bootJar {
    classifier = 'boot'
    mainClass = 'me.julb.Application'
}