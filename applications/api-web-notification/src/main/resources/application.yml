spring:
  cloud:
    kubernetes:
      enabled: false

---
spring:
  config:
    activate:
      on-profile: NO_OUTPUT
  main:
    banner-mode: "off"
  
logging:
  level:
    root: OFF
    org.springframework: OFF

---
spring:
  config:
    activate:
      on-profile: TEST
  main:
    banner-mode: "off"
  
logging:
  level:
    root: OFF
    org.springframework: OFF
  
---
spring:
  config:
    activate:
      on-profile: LOCAL
  cloud:
    function:
      definition: dispatchedWebNotification;resourceEvent
    stream:
      bindings:
        default.binder: rabbitmq
        main-out-0:
          destination: E.main
        dispatchedWebNotification-in-0:
          destination: E.main
          group: Q.web-notification.dispatched-web-notification
          consumer:
            concurrency: 3
            maxAttempts: 5
            backOffMultiplier: 3.0
        resourceEvent-in-0:
          destination: E.main
          group: Q.web-notification.resource-event
          consumer:
            concurrency: 3
            maxAttempts: 5
            backOffMultiplier: 3.0
      rabbit:
        bindings:
          main-out-0:
            producer:
              routing-key-expression: headers['routingKey']
          dispatchedWebNotification-in-0:
            consumer:
              auto-bind-dlq: true
              queue-name-group-only: true
          resourceEvent-in-0:
            consumer:
              auto-bind-dlq: true
              queue-name-group-only: true

#mongodb
spring.data.mongodb:
  host: localhost
  port: 27017
  database: test
  autoIndexCreation: true
  replica-set-name: rs0

#
security:
  internal-api-key:
    enabled: true
    headerName: x-julb-internal-api-key
    headerValue: hello
  jwt:
    enabled: false
    issuer: julb.wn
    audience: julb.wn
    signature-key:
      algorithm: RS512
      key-id: sign.test
      key-path: classpath:/jwt.sign.key.pub

# Application
application:
  auto-cleaning:
    expiry-threshold-in-days: 15

management:
  endpoints.web.exposure.include: health,prometheus,info
  endpoint.prometheus.enabled: true

---
spring:
  config:
    activate:
      on-profile: OAS3

springdoc:
   cache.disabled: true
   api-docs:
      enabled: true
   swagger-ui:
      enabled: false
   packages-to-scan: me.julb
   additional-properties:
      name: ${build.name}
      version: ${build.version}
      description: desc
      servers:
         - url: "http://localhost:8080"
           description: "Hello"
      authentication:
         authentication-headers:
            - display-name: header1
              header-name: X-Header-1
            - display-name: header2
              header-name: X-Header-2
      extra-info:
        display-name: Ping API
        long-description: |
          # Hello API
        tags: abc,def,ghi

---

spring:
  config:
    activate:
      on-profile: DEV,INT,VAL,STG,PROD
  cloud:
    kubernetes:
      enabled: true
      reload:
        enabled: true
      config:
        sources:
        - name: api-default-java
        - name: api-default-backend-java
        - name: ${APPLICATION_FULL_NAME}