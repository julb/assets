{
  "openapi": "3.0.1",
  "info": {
    "title": "api-authorization-server",
    "description": "desc",
    "version": "21.6.0-SNAPSHOT",
    "x-extra-info": {
      "displayName": "Ping API",
      "longDescription": "# Hello API\n",
      "tags": [
        "abc",
        "def",
        "ghi"
      ],
      "starred": false
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Hello"
    }
  ],
  "security": [
    {
      "header1": [],
      "header2": []
    }
  ],
  "paths": {
    "/users/{userId}/mobile-phones/{userMobilePhoneId}/verify": {
      "get": {
        "tags": [
          "user-mobile-phone-verify-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "verify",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMobilePhoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-mobile-phone-verify-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "verify_1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMobilePhoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/mobile-phones/{userMobilePhoneId}/trigger-verify": {
      "get": {
        "tags": [
          "user-mobile-phone-verify-controller"
        ],
        "summary": "triggers the verification the mobile phone of the user",
        "operationId": "triggerVerify",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMobilePhoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-mobile-phone-verify-controller"
        ],
        "summary": "triggers the verification the mobile phone of the user",
        "operationId": "triggerVerify_1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMobilePhoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/mails/{userMailId}/verify": {
      "get": {
        "tags": [
          "user-mail-verify-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "verify_2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-mail-verify-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "verify_3",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/mails/{userMailId}/trigger-verify": {
      "get": {
        "tags": [
          "user-mail-verify-controller"
        ],
        "summary": "trigger the verification of the email of the user",
        "operationId": "triggerVerify_2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-mail-verify-controller"
        ],
        "summary": "trigger the verification of the email of the user",
        "operationId": "triggerVerify_3",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mobile-phones/{id}/verify": {
      "get": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "verify_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "verify_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mobile-phones/{id}/trigger-verify": {
      "get": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "triggerVerify_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "verifies the mobile phone of the user",
        "operationId": "triggerVerify_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mails/{id}/verify": {
      "get": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "verify_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "verify_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mails/{id}/trigger-verify": {
      "get": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "triggerVerify_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "verifies the email of the user",
        "operationId": "triggerVerify_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/profile": {
      "get": {
        "tags": [
          "my-profile-controller"
        ],
        "summary": "gets my profile",
        "operationId": "get_1",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-profile-controller"
        ],
        "summary": "updates my profile",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-profile-controller"
        ],
        "summary": "creates my profile",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDTO"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "my-profile-controller"
        ],
        "summary": "patches my profile",
        "operationId": "patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfilePatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/preferences": {
      "get": {
        "tags": [
          "my-preferences-controller"
        ],
        "summary": "gets my preferences",
        "operationId": "get_2",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-preferences-controller"
        ],
        "summary": "updates my preferences",
        "operationId": "update_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-preferences-controller"
        ],
        "summary": "creates my preferences",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDTO"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "my-preferences-controller"
        ],
        "summary": "patches my preferences",
        "operationId": "patch_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mobile-phones/{id}": {
      "get": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "gets my mobile phones",
        "operationId": "get_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "updates my mobile phones",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMobilePhoneUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "deletes my mobile phones",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "patches my mobile phones",
        "operationId": "patch_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMobilePhonePatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mails/{id}": {
      "get": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "gets my mails",
        "operationId": "get_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "updates my mails",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMailUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "deletes my mails",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "patches my mails",
        "operationId": "patch_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMailPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/totp/{id}": {
      "get": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "gets my authentication by totp",
        "operationId": "get_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByTotpDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "updates my authentication by totp",
        "operationId": "update_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByTotpUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByTotpDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "deletes my authentication by totp",
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "patches my authentication by totp",
        "operationId": "patch_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByTotpPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByTotpDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/pincode": {
      "get": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "gets my authentication by pincode",
        "operationId": "get_6",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPincodeDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "updates my authentication by pincodes",
        "operationId": "update_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPincodeUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPincodeDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "creates my authentication by pincode",
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPincodeCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPincodeDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "deletes my authentication by pincode",
        "operationId": "delete_5",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "patches my authentication by pincode",
        "operationId": "patch_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPincodePatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPincodeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/password": {
      "get": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "gets my authentication by password",
        "operationId": "get_7",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPasswordDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "updates my authentication by passwords",
        "operationId": "update_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPasswordUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPasswordDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "creates my authentication by password",
        "operationId": "create_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPasswordCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPasswordDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "deletes my authentication by password",
        "operationId": "delete_6",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "patches my authentication by password",
        "operationId": "patch_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPasswordPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPasswordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/api-key/{id}": {
      "get": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "gets my authentication by api-key",
        "operationId": "get_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByApiKeyDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "updates my authentication by api-key",
        "operationId": "update_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByApiKeyUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByApiKeyDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "deletes my authentication by api-key",
        "operationId": "delete_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "patches my authentication by api-key",
        "operationId": "patch_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByApiKeyPatchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByApiKeyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/authentications/type/pincode/trigger-reset": {
      "post": {
        "tags": [
          "user-authentication-by-pincode-reset-controller"
        ],
        "summary": "triggers the reset of the authentication by pincode of the user",
        "operationId": "triggerPincodeReset",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryChannelDeviceType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MAIL",
                "MOBILE_PHONE"
              ]
            }
          },
          {
            "name": "recoveryChannelDeviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/users/authentications/type/pincode/reset-pincode": {
      "post": {
        "tags": [
          "user-authentication-by-pincode-reset-controller"
        ],
        "summary": "triggers the reset of the authentication by pincode of the user",
        "operationId": "resetPincode",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPincode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resetToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/users/authentications/type/password/trigger-reset": {
      "post": {
        "tags": [
          "user-authentication-by-password-reset-controller"
        ],
        "summary": "triggers the reset of the authentication by password for the user",
        "operationId": "triggerPasswordReset",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recoveryChannelDeviceType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MAIL",
                "MOBILE_PHONE"
              ]
            }
          },
          {
            "name": "recoveryChannelDeviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/users/authentications/type/password/reset-password": {
      "post": {
        "tags": [
          "user-authentication-by-password-reset-controller"
        ],
        "summary": "triggers the reset of the authentication by password of the user",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resetToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/signup/pincode": {
      "post": {
        "tags": [
          "signup-controller"
        ],
        "summary": "sign-up using pincode",
        "operationId": "signupWithPincode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupWithPincodeCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/signup/password": {
      "post": {
        "tags": [
          "signup-controller"
        ],
        "summary": "sign-up using password",
        "operationId": "signupWithPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupWithPasswordCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/session/refresh": {
      "post": {
        "tags": [
          "my-current-session-controller"
        ],
        "summary": "gets an access token",
        "operationId": "refreshAccessToken",
        "parameters": [
          {
            "name": "idToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/my/mobile-phones": {
      "get": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "list my mobile phones",
        "operationId": "findAll_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "0"
                }
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "20"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "unpaged",
            "in": "query",
            "description": "Flag to return the results unpaged.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Parameter to specify a search query.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserMobilePhoneDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mobile-phone-controller"
        ],
        "summary": "creates my mobile phone",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMobilePhoneCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMobilePhoneDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/mails": {
      "get": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "list my mails",
        "operationId": "findAll_3",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "0"
                }
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "20"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "unpaged",
            "in": "query",
            "description": "Flag to return the results unpaged.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Parameter to specify a search query.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserMailDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-mail-controller"
        ],
        "summary": "creates my mail",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMailCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/totp": {
      "get": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "list my authentications by totp",
        "operationId": "findAll_4",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "0"
                }
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "20"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "unpaged",
            "in": "query",
            "description": "Flag to return the results unpaged.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Parameter to specify a search query.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserAuthenticationByTotpDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-authentication-by-totp-controller"
        ],
        "summary": "creates my authentication by totp",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByTotpCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByTotpWithRawSecretDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/pincode/update-pincode": {
      "post": {
        "tags": [
          "my-authentication-by-pincode-controller"
        ],
        "summary": "updates the authentication by pincode of the user",
        "operationId": "updatePincode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPincodePincodeChangeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPincodeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/password/update-password": {
      "post": {
        "tags": [
          "my-authentication-by-password-controller"
        ],
        "summary": "updates the authentication by password of the user",
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByPasswordPasswordChangeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByPasswordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/my/authentications/type/api-key": {
      "get": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "list my authentications by api-key",
        "operationId": "findAll_5",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "0"
                }
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "20"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "unpaged",
            "in": "query",
            "description": "Flag to return the results unpaged.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Parameter to specify a search query.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserAuthenticationByApiKeyDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "my-authentication-by-api-key-controller"
        ],
        "summary": "creates my authentication by api-key",
        "operationId": "create_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationByApiKeyCreationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationByApiKeyWithRawKeyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/recovery-devices": {
      "get": {
        "tags": [
          "user-account-recovery-controller"
        ],
        "summary": "get the list of devices to recover the account",
        "operationId": "findAllByMailAddress",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecoveryChannelDeviceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/my/sessions": {
      "get": {
        "tags": [
          "my-session-controller"
        ],
        "summary": "list sessions",
        "operationId": "findAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "0"
                }
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "default": "20"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "unpaged",
            "in": "query",
            "description": "Flag to return the results unpaged.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Parameter to specify a search query.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSessionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-session-controller"
        ],
        "summary": "deletes all sessions",
        "operationId": "delete",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/my/sessions/{id}": {
      "get": {
        "tags": [
          "my-session-controller"
        ],
        "summary": "gets a session",
        "operationId": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-session-controller"
        ],
        "summary": "deletes a session",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/my/session": {
      "get": {
        "tags": [
          "my-current-session-controller"
        ],
        "summary": "get the current session",
        "operationId": "findMySession",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedUserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "my-current-session-controller"
        ],
        "summary": "deletes the current session",
        "operationId": "deleteMySession",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/my/recovery-devices": {
      "get": {
        "tags": [
          "my-account-recovery-controller"
        ],
        "summary": "get the list of devices for the connected user to recover the account",
        "operationId": "findAll_1",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecoveryChannelDeviceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alive": {
      "get": {
        "tags": [
          "alive-controller"
        ],
        "operationId": "isAlive",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AliveDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HttpErrorResponseDTO": {
        "type": "object",
        "properties": {
          "httpStatus": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "dateTime": {
            "type": "string"
          },
          "trace": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MobilePhoneDTO": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "internationalNumber": {
            "type": "string"
          },
          "nationalNumber": {
            "type": "string"
          },
          "e164Number": {
            "type": "string"
          }
        },
        "description": "Mobile phone of the user"
      },
      "UserMobilePhoneDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "mobilePhone": {
            "$ref": "#/components/schemas/MobilePhoneDTO"
          },
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          },
          "verified": {
            "type": "boolean",
            "description": "Flag to indicate if the address is verified"
          }
        }
      },
      "UserMailDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "mail": {
            "type": "string",
            "description": "Mail of the user"
          },
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          },
          "verified": {
            "type": "boolean",
            "description": "Flag to indicate if the address is verified"
          }
        }
      },
      "UserProfileUpdateDTO": {
        "required": [
          "displayNameMethod",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "avatarDocumentLibraryPath": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Avatar of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "displayNameMethod": {
            "type": "string",
            "description": "Display name method of the user",
            "enum": [
              "FIRSTNAME_LASTNAME",
              "LASTNAME_FIRSTNAME"
            ]
          },
          "jobTitle": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Job title of the user"
          },
          "organization": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Organization of the user"
          },
          "organizationUnit": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Orgnizational unit of the user"
          },
          "websiteUrl": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Website of the user"
          },
          "location": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Location of the user"
          },
          "twitterAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Twitter account of the user"
          },
          "linkedInAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Linked-In account of the user"
          },
          "instagramAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Instagram account of the user"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "description": "Tags associated to the user",
            "items": {
              "type": "string",
              "description": "Tags associated to the user"
            }
          }
        }
      },
      "UserProfileDTO": {
        "type": "object",
        "properties": {
          "avatarDocumentLibraryPath": {
            "type": "string",
            "description": "Avatar of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the user"
          },
          "displayNameMethod": {
            "type": "string",
            "description": "Display name method of the user",
            "enum": [
              "FIRSTNAME_LASTNAME",
              "LASTNAME_FIRSTNAME"
            ]
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title of the user"
          },
          "organization": {
            "type": "string",
            "description": "Organization of the user"
          },
          "organizationUnit": {
            "type": "string",
            "description": "Orgnizational unit of the user"
          },
          "websiteUrl": {
            "type": "string",
            "description": "Website of the user"
          },
          "location": {
            "type": "string",
            "description": "Location of the user"
          },
          "twitterAccount": {
            "type": "string",
            "description": "Twitter account of the user"
          },
          "linkedInAccount": {
            "type": "string",
            "description": "Linked-In account of the user"
          },
          "instagramAccount": {
            "type": "string",
            "description": "Instagram account of the user"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "description": "Tags associated to the user",
            "items": {
              "type": "string",
              "description": "Tags associated to the user"
            }
          }
        }
      },
      "UserPreferencesUpdateDTO": {
        "type": "object",
        "properties": {
          "language": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserPreferencesDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "language": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserMobilePhoneUpdateDTO": {
        "required": [
          "primary"
        ],
        "type": "object",
        "properties": {
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          }
        }
      },
      "UserMailUpdateDTO": {
        "required": [
          "primary"
        ],
        "type": "object",
        "properties": {
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          }
        }
      },
      "UserAuthenticationByTotpUpdateDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByTotpDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          },
          "mfaEnabled": {
            "type": "boolean"
          }
        }
      },
      "UserAuthenticationByPincodeUpdateDTO": {
        "required": [
          "mfaEnabled"
        ],
        "type": "object",
        "properties": {
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPincodeDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "pincodeExpiryDateTime": {
            "type": "string",
            "description": "Date at which the pincode will expire"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPasswordUpdateDTO": {
        "required": [
          "mfaEnabled"
        ],
        "type": "object",
        "properties": {
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPasswordDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "passwordExpiryDateTime": {
            "type": "string",
            "description": "Date at which the password will expire"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByApiKeyUpdateDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByApiKeyDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          },
          "mfaEnabled": {
            "type": "boolean"
          }
        }
      },
      "SignupWithPincodeCreationDTO": {
        "required": [
          "mail",
          "pincode",
          "profile"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfileCreationDTO"
          },
          "pincode": {
            "type": "string"
          }
        }
      },
      "UserProfileCreationDTO": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Unique ID for the user"
          },
          "mail": {
            "type": "string",
            "description": "Mail for the user"
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag to indicate if the user account is enabled"
          },
          "accountNonLocked": {
            "type": "boolean",
            "description": "Flag to indicate if the user account is not locked"
          },
          "roles": {
            "type": "array",
            "description": "Roles of the user",
            "items": {
              "type": "string",
              "description": "Roles of the user",
              "enum": [
                "ADMINISTRATOR",
                "USER"
              ]
            }
          }
        }
      },
      "SignupWithPasswordCreationDTO": {
        "required": [
          "mail",
          "password",
          "profile"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfileCreationDTO"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserPreferencesCreationDTO": {
        "type": "object",
        "properties": {
          "language": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          }
        }
      },
      "MobilePhoneCreationDTO": {
        "required": [
          "countryCode",
          "number"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "maxLength": 3,
            "minLength": 2,
            "pattern": "^[A-Z]+$",
            "type": "string"
          },
          "number": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]+$",
            "type": "string"
          }
        },
        "description": "Mobile phone of the user"
      },
      "UserMobilePhoneCreationDTO": {
        "required": [
          "mobilePhone",
          "primary"
        ],
        "type": "object",
        "properties": {
          "mobilePhone": {
            "$ref": "#/components/schemas/MobilePhoneCreationDTO"
          },
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the mobile phone is the primary"
          }
        }
      },
      "UserMailCreationDTO": {
        "required": [
          "mail",
          "primary"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "description": "Mail of the user"
          },
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          }
        }
      },
      "UserAuthenticationByTotpCreationDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByTotpWithRawSecretDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "rawSecret": {
            "type": "string",
            "description": "Secret related to the TOTP authentication"
          },
          "qrCodeUri": {
            "type": "string",
            "description": "QRCode URI for the TOTP authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          },
          "mfaEnabled": {
            "type": "boolean"
          }
        }
      },
      "UserAuthenticationByPincodeCreationDTO": {
        "required": [
          "pincode"
        ],
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string",
            "description": "Pincode for the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPincodePincodeChangeDTO": {
        "required": [
          "newPincode",
          "oldPincode"
        ],
        "type": "object",
        "properties": {
          "oldPincode": {
            "type": "string",
            "description": "Old pincode for the authentication"
          },
          "newPincode": {
            "type": "string",
            "description": "New pincode for the authentication"
          }
        }
      },
      "UserAuthenticationByPasswordCreationDTO": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password for the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPasswordPasswordChangeDTO": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "Old password for the authentication"
          },
          "newPassword": {
            "type": "string",
            "description": "New password for the authentication"
          }
        }
      },
      "UserAuthenticationByApiKeyCreationDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByApiKeyWithRawKeyDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "lastSuccessfulUseDateTime": {
            "type": "string",
            "description": "Last successful use of this authentication"
          },
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "rawKey": {
            "type": "string",
            "description": "API key for the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          },
          "mfaEnabled": {
            "type": "boolean"
          }
        }
      },
      "UserProfilePatchDTO": {
        "type": "object",
        "properties": {
          "avatarDocumentLibraryPath": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Avatar of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "displayNameMethod": {
            "type": "string",
            "description": "Display name method of the user",
            "enum": [
              "FIRSTNAME_LASTNAME",
              "LASTNAME_FIRSTNAME"
            ]
          },
          "jobTitle": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Job title of the user"
          },
          "organization": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Organization of the user"
          },
          "organizationUnit": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Orgnizational unit of the user"
          },
          "websiteUrl": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Website of the user"
          },
          "location": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Location of the user"
          },
          "twitterAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Twitter account of the user"
          },
          "linkedInAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Linked-In account of the user"
          },
          "instagramAccount": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Instagram account of the user"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "description": "Tags associated to the user",
            "items": {
              "type": "string",
              "description": "Tags associated to the user"
            }
          }
        }
      },
      "UserPreferencesPatchDTO": {
        "type": "object",
        "properties": {
          "language": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserMobilePhonePatchDTO": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          }
        }
      },
      "UserMailPatchDTO": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "boolean",
            "description": "Flag to indicate if the address is the primary"
          }
        }
      },
      "UserAuthenticationByTotpPatchDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPincodePatchDTO": {
        "type": "object",
        "properties": {
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByPasswordPatchDTO": {
        "type": "object",
        "properties": {
          "mfaEnabled": {
            "type": "boolean",
            "description": "Enable or not the MFA on this authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "UserAuthenticationByApiKeyPatchDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the authentication"
          },
          "type": {
            "type": "string",
            "enum": [
              "PASSWORD",
              "PINCODE",
              "TOTP",
              "API_KEY"
            ]
          }
        }
      },
      "RecoveryChannelDeviceDTO": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MAIL",
              "MOBILE_PHONE"
            ]
          },
          "maskedName": {
            "type": "string"
          }
        }
      },
      "PageUserSessionDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSessionDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "UserSessionDTO": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the object"
          },
          "expiryDateTime": {
            "type": "string",
            "description": "Expiry date time"
          },
          "durationInSeconds": {
            "type": "integer",
            "description": "Duration in seconds of the session.",
            "format": "int64"
          },
          "mfaVerified": {
            "type": "boolean",
            "description": "Flag that indicates if MFA has been verified."
          },
          "ipv4Address": {
            "type": "string",
            "description": "IP V4 Address of the session"
          },
          "lastUseDateTime": {
            "type": "string",
            "description": "Date/Time of the latest activity on this session"
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system used to run the session"
          },
          "browser": {
            "type": "string",
            "description": "Browser used to run the session"
          }
        }
      },
      "AuthenticatedUserDTO": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "pictureUrl": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "mailVerified": {
            "type": "boolean"
          },
          "e164Number": {
            "type": "string"
          },
          "mobilePhoneVerified": {
            "type": "boolean"
          },
          "locale": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          },
          "organization": {
            "type": "string"
          },
          "organizationUnit": {
            "type": "string"
          },
          "mfaVerified": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMINISTRATOR",
                "USER"
              ]
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageUserMobilePhoneDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserMobilePhoneDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageUserMailDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserMailDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageUserAuthenticationByTotpDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAuthenticationByTotpDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageUserAuthenticationByApiKeyDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAuthenticationByApiKeyDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "AliveDTO": {
        "type": "object",
        "properties": {
          "alive": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "header1": {
        "type": "apiKey",
        "name": "X-Header-1",
        "in": "header"
      },
      "header2": {
        "type": "apiKey",
        "name": "X-Header-2",
        "in": "header"
      }
    }
  }
}