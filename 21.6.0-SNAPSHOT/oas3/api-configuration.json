{
  "security": [
    {
      "header2": [],
      "header1": []
    }
  ],
  "components": {
    "schemas": {
      "AliveDTO": {
        "type": "object",
        "properties": {
          "alive": {
            "type": "boolean"
          }
        }
      },
      "HttpErrorResponseDTO": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string"
          },
          "trace": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "httpStatus": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "header2": {
        "in": "header",
        "name": "X-Header-2",
        "type": "apiKey"
      },
      "header1": {
        "in": "header",
        "name": "X-Header-1",
        "type": "apiKey"
      }
    }
  },
  "servers": [
    {
      "description": "Hello",
      "url": "http://localhost:8080"
    }
  ],
  "openapi": "3.0.1",
  "paths": {
    "/alive": {
      "get": {
        "operationId": "isAlive",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AliveDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "alive-controller"
        ]
      }
    },
    "/properties": {
      "get": {
        "summary": "returns all properties for the current trademark",
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponseDTO"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "prefix",
            "required": false
          }
        ],
        "tags": [
          "properties-controller"
        ]
      }
    }
  },
  "info": {
    "x-extra-info": {
      "longDescription": "# Hello API\n",
      "starred": false,
      "displayName": "Ping API",
      "tags": [
        "abc",
        "def",
        "ghi"
      ]
    },
    "description": "desc",
    "title": "api-configuration",
    "version": "21.6.0-SNAPSHOT"
  }
}