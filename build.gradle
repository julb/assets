plugins {
	id 'me.julb.gradleplugins.semanticversioning'
	id 'com.github.ben-manes.versions'
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'
	
	eclipse {
	    classpath {
	        downloadSources = true
            downloadJavadoc = true
	    }
	    project {
            natures 'org.eclipse.buildship.core.gradleprojectnature'
        }
	}
		
	repositories {
		mavenLocal()
	 	mavenCentral()
	 	maven {
            url 'https://repo.spring.io/milestone'
        }
	}
	
	publishing {
		repositories {
			mavenLocal()
		}
	}

	// patch vs code
	afterEvaluate {
		if(project.plugins.hasPlugin(JavaPlugin)) {
			sourceSets.main.java.srcDirs += "build/generated/sources/annotationProcessor/java/main"
			sourceSets.test.java.srcDirs += "build/generated/sources/annotationProcessor/java/test"
		}	
	}
}

afterEvaluate {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { keyword -> version.toUpperCase().contains(keyword) }
        def regex = /^[0-9,.v-]+(-r)?$/
        def yearHourRegex = /^[0-9]{8,8}[.][0-9]{6,6}$/
        return !stableKeyword && (!(version ==~ regex) || version ==~ yearHourRegex)
    }
    
    tasks.named("dependencyUpdates").configure {
        rejectVersionIf {
            isNonStable(it.candidate.version)
        }
    }
}